
@model Infraestructure.Models.CompraEncabezado

@{
    ViewBag.Title = "ByteStore - Carrito";
}

<div class="d-md-flex justify-content-md-center mb-4">
    <h2 class="border border-3 border-warning w-auto text-center text-light fw-bold p-3 rounded-4">Carrito</h2>
</div>
<h3 class="text-white mb-4 text-center">En este apartado podrás encontrar la información de tu carrito</h3>

@using (Html.BeginForm("Save", "Pedido", FormMethod.Post))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr class="mb-4" />
    <div class="row" id="divDatos">
        <div class="col-md-4 mb-4">
            <div class="form-group">
                @Html.LabelFor(model => model.FechaHora, htmlAttributes: new { @class = "col-form-label " })
                <div class="col-md-12">
                    @Html.TextBoxFor(model => model.FechaHora, htmlAttributes: new { @class = "form-control me-sm-2 text-black fw-bold", @Value = DateTime.Now.ToString("yyyy-MM-d HH:mm:ss"), @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.FechaHora, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-md-4 mb-4">
            <div class="form-group">
                @Html.LabelFor(model => model.MetodoPago, htmlAttributes: new { @class = "col-form-label " })
                <div class="col-md-12">
                    @Html.DropDownListFor(model => model.MetodoPago.IdMetodoPago, (SelectList)ViewBag.ListaPago, " Seleccione un Metodo de Pago ", htmlAttributes: new { @class = "form-select form-control me-sm-2 text-black fw-bold" })
                    @Html.ValidationMessageFor(model => model.MetodoPago.IdMetodoPago, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-md-4 mb-4">
            <div class="form-group">
                @Html.LabelFor(model => model.Direccion, htmlAttributes: new { @class = "col-form-label " })
                <div class="col-md-12">
                    @Html.DropDownListFor(model => model.Direccion.IdDireccion, (SelectList)ViewBag.ListaDireccion, " Seleccione una Dirección ", htmlAttributes: new { @class = "form-select form-control me-sm-2 text-black fw-bold" })
                    @Html.ValidationMessageFor(model => model.Direccion.IdDireccion, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <hr class="mb-4" />
    </div>

    <div>
        <div id="detalleCarrito">
            @Html.Partial("~/Views/Pedido/_DetalleCarrito.cshtml",
            (IEnumerable<Infraestructure.Models.CompraDetalle>)ViewBag.Carrito)
        </div>
    </div>
    <hr class="mb-4" />

    @if (Web.Utils.Carrito.Instancia.Items.Count() > 0)
    {
        <button type="button" class="btn btn-primary fs-4" id="btnProcederComprar">
            <i class="fa-solid fa-cart-shopping"></i>
            Proceder a Comprar
        </button>
    }
    <button type="submit" class="btn btn-primary fs-4" id="btnComprar">
        <i class="fa-solid fa-cart-shopping"></i>
        Comprar
    </button>
</div>
}

@section Scripts {
    
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">

        $(document).ready(function () {
            $("#divDatos").hide();
            $("#btnComprar").hide();
        });

        $("#btnProcederComprar").click(function () {
            $("#divDatos").show();
            $("#btnComprar").show();
            $(this).hide();
            $("#loaderSpinner").removeClass("d-none");

            $.ajax({
                type: "GET",
                dataType: "text",
                url: "/Pedido/DetalleCarritoNoEditable",
                data: {},
                success: function (result) {
                    $('#detalleCarrito').html("");
                    $('#detalleCarrito').html(result);
                    $("#loaderSpinner").addClass("d-none");
                },
                error: function (xhr, status, error) {
                    console.log("Error: " + error + ", No Error: " + xhr.status);
                }
            });
        })

        function actualizarDetalleCarrito() {

            $("#loaderSpinner").removeClass("d-none");

            $.ajax({
                type: "GET",
                dataType: "text",
                url: "/Pedido/DetalleCarrito",
                data: {},
                success: function (result) {
                    $('#detalleCarrito').html("");
                    $('#detalleCarrito').html(result);
                    $("#loaderSpinner").addClass("d-none");
                },
                error: function (xhr, status, error) {
                    console.log("Error: " + error + ", No Error: " + xhr.status);
                }
            });
        }

        $(document).on("change", ".changeCantidad", function () {

            var txtCantidad = $(this);
            var cantidad = txtCantidad.val();
            var idProducto = txtCantidad.data("idproducto");
            var stockActual = txtCantidad.data("stockactual");

            if (cantidad > stockActual) {
                var mensaje = @Html.Raw(Json.Encode(Web.Util.SweetAlertHelper.Mensaje("Cuidado", "No se puede ingresar una cantidad mayor al Stock del producto {stockactual}", Web.Util.SweetAlertMessageType.warning)));
                mensaje = mensaje.replace('{stockactual}', `(${stockActual} en inventario)`)
                eval(mensaje);
                cantidad = 1;
            }

            $("#loaderSpinner").removeClass("d-none");

            $.ajax({
                type: "POST",
                dataType: "text",
                url: "/Pedido/ActualizarCantidad",
                data: { idProducto, cantidad },
                success: function (result) {

                    result = JSON.parse(result);

                    var { cantCarrito } = result;

                    if (cantCarrito <= 0) {
                        $('#btnProcederComprar').hide();
                    }

                    $('.cantCarrito').html(cantCarrito);
                    actualizarDetalleCarrito();
                    $("#loaderSpinner").addClass("d-none");
                },
                error: function (xhr, status, error) {
                    console.log("Error: " + error + ", No Error: " + xhr.status);
                },
            });
        });

        $(document).on('click', '.eliminar', function () {


            var btnEliminar = $(this);
            var idProducto = btnEliminar.data('idproducto');

            $("#loaderSpinner").removeClass("d-none");

            $.ajax({
                type: "POST",
                dataType: "text",
                url: '/Pedido/EliminarProducto',
                data: { idProducto },
                success: function (result) {

                    result = JSON.parse(result);

                    var { cantCarrito } = result;

                    if (cantCarrito <= 0) {
                        $('#btnProcederComprar').hide();
                    }

                    $('.cantCarrito').html(cantCarrito);
                    actualizarDetalleCarrito();
                    $("#loaderSpinner").addClass("d-none");
                },
                error: function (xhr, status, error) {
                    console.log("Error: " + error + ", No Error: " + xhr.status);
                },
            })
        });
    </script>
    
}