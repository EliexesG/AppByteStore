@model IEnumerable<Infraestructure.Models.Pedido>

@{ 
    int vendedor = ViewBag.Vendedor;
    int estadoEntrega = ViewBag.EstadoEntrega;
}

<ul class="nav nav-tabs text-white" id="myTab" role="tablist">
    <li class="nav-item" role="presentation">
        <button class="nav-link @(estadoEntrega == 1 ? "active" : "") text-white tab-btn-estadoentrega" data-estadoentrega="1" id="enProgreso-tab" data-bs-toggle="tab" data-bs-target="#enProgreso" type="button" role="tab" aria-controls="enProgreso" aria-selected="@(estadoEntrega == 1 ? "true" : "false")">En Progreso (@Model.Where(p => p.EstadoEntrega == 1).ToList().Count())</button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link @(estadoEntrega == 0 ? "active" : "") text-white tab-btn-estadoentrega" data-estadoentrega="0" id="pendientes-tab" data-bs-toggle="tab" data-bs-target="#pendientes" type="button" role="tab" aria-controls="pendientes" aria-selected="@(estadoEntrega == 0 ? "true" : "false")">Pendientes (@Model.Where(p => p.EstadoEntrega == 0).ToList().Count())</button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link @(estadoEntrega == 2 ? "active" : "") text-white tab-btn-estadoentrega" data-estadoentrega="2" id="finalizados-tab" data-bs-toggle="tab" data-bs-target="#finalizados" type="button" role="tab" aria-controls="finalizado" aria-selected="@(estadoEntrega == 2 ? "true" : "false")">Finalizado (@Model.Where(p => p.EstadoEntrega == 2).ToList().Count())</button>
    </li>
</ul>
<div class="tab-content p-4 bg-body" id="myTabContent" style="border-bottom-left-radius: 1rem; border-bottom-right-radius: 1rem;">
    <div class="tab-pane @(estadoEntrega == 1 ? "show active" : "") fade mt-4" id="enProgreso" role="tabpanel" aria-labelledby="enProgreso-tab">
        @if (Model.Where(pedido => pedido.EstadoEntrega == 1).ToList().Count() > 0)
        {
            <h3 class="text-white fw-bold mb-4">
                En Progreso
            </h3>

            <div class="row mb-4">
                @foreach (var pedido in Model.Where(p => p.EstadoEntrega == 1).ToList())
                {
                    <div class="col-md-12" style="height:100%">
                        <div class="card text-white p-3 rounded-4 bg-primary mb-3">
                            <i class="fa-solid fa-truck-fast fa-2xl m-3 shadow-lg"></i>
                            <div class="card-body">
                                <div class="d-flex">
                                    <h3 class="card-title mb-3 me-2">
                                        Pedido de
                                        @pedido.CompraEncabezado.Usuario.Nombre
                                        @pedido.CompraEncabezado.Usuario.PrimerApellido
                                        @pedido.CompraEncabezado.Usuario.SegundoApellido
                                    </h3>
                                    <p class="card-text fs-4">
                                        <span>•</span>
                                        @for (int i = 1; i <= 5; i++)
                                        {
                                            if (i <= pedido.CompraEncabezado.Usuario.PromedioEvaluaciones)
                                            {
                                                <i class="fa-solid fa-star"></i>
                                            }
                                            else
                                            {
                                                <i class="fa-regular fa-star"></i>
                                            }
                                        }
                                        (@Html.DisplayFor(model => pedido.CompraEncabezado.Usuario.PromedioEvaluaciones) estrellas como Cliente)
                                    </p>
                                </div>
                                
                                <p class="card-text mb-3">@Html.DisplayNameFor(model => model.CompraEncabezado.FechaHora): @Html.DisplayFor(model => pedido.CompraEncabezado.FechaHora)</p>

                                <table class="table rounded rounded-4 overflow-hidden fs-5 shadow text-center">
                                    <thead class="table-primary">
                                        <tr>
                                            <th scope="col">Producto</th>
                                            <th scope="col">Cantidad</th>
                                            <th scope="col">Sub-Total</th>
                                            <th scope="col">Asignar como Entregado</th>
                                        </tr>
                                    </thead>
                                    <tbody class="table-dark">
                                        @foreach (var compraDetalle in (ICollection<Infraestructure.Models.CompraDetalle>)pedido.CompraEncabezado.CompraDetalle.Where(compra => compra.Producto.Usuario.IdUsuario == vendedor).ToList())
                                        {
                                            <tr class="p-4">
                                                <th scope="row">@Html.DisplayFor(model => compraDetalle.Producto.Nombre)</th>
                                                <th>@Html.DisplayFor(model => compraDetalle.Cantidad)</th>
                                                <th>@Html.DisplayFor(model => compraDetalle.Precio)</th>
                                                <th><button data-idproducto="@compraDetalle.IdProducto" data-idcompraencabezado="@compraDetalle.IdCompraEncabezado" data-estadoentrega="@compraDetalle.EstadoEntrega" class="ActualizarEstadoEntregado btn btn-primary fs-4 @(compraDetalle.EstadoEntrega == false ? "" : "disabled")"><i class="fa-solid @(compraDetalle.EstadoEntrega == false ? "fa-box" : "fa-box-open")"></i></button></th>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>

                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <h3 class="text-white mb-4 text-center mt-4"><i class="fa-solid fa-warning text-warning"></i> No hay pedidos en progreso</h3>
        }
    </div>
    <div class="tab-pane fade @(estadoEntrega == 0 ? "show active" : "") bt-4" id="pendientes" role="tabpanel" aria-labelledby="pendientes-tab">
        @if (Model.Where(pedido => pedido.EstadoEntrega == 0).ToList().Count() > 0)
        {
            <h3 class="text-white fw-bold mb-4">
                Pendientes
            </h3>

            <div class="row mb-4">
                @foreach (var pedido in Model.Where(p => p.EstadoEntrega == 0).ToList())
                {
                    <div class="col-md-12" style="height:100%">
                        <div class="card text-white p-3 rounded-4 bg-primary mb-3">
                            <i class="fa-solid fa-truck-fast fa-2xl m-3 shadow-lg"></i>
                            <div class="card-body">
                                <div class="d-flex">
                                    <h3 class="card-title mb-3 me-2">
                                        Pedido de
                                        @pedido.CompraEncabezado.Usuario.Nombre
                                        @pedido.CompraEncabezado.Usuario.PrimerApellido
                                        @pedido.CompraEncabezado.Usuario.SegundoApellido
                                    </h3>
                                    <p class="card-text fs-4">
                                        <span>•</span>
                                        @for (int i = 1; i <= 5; i++)
                                        {
                                            if (i <= pedido.CompraEncabezado.Usuario.PromedioEvaluaciones)
                                            {
                                                <i class="fa-solid fa-star"></i>
                                            }
                                            else
                                            {
                                                <i class="fa-regular fa-star"></i>
                                            }
                                        }
                                        (@Html.DisplayFor(model => pedido.CompraEncabezado.Usuario.PromedioEvaluaciones) estrellas como Cliente)
                                    </p>
                                </div>
                                <p class="card-text mb-3">@Html.DisplayNameFor(model => model.CompraEncabezado.FechaHora): @Html.DisplayFor(model => pedido.CompraEncabezado.FechaHora)</p>

                                <table class="table rounded rounded-4 overflow-hidden fs-5 shadow text-center">
                                    <thead class="table-primary">
                                        <tr>
                                            <th scope="col">Producto</th>
                                            <th scope="col">Cantidad</th>
                                            <th scope="col">Sub-Total</th>
                                            <th scope="col"></th>
                                        </tr>
                                    </thead>
                                    <tbody class="table-dark">
                                        @foreach (var compraDetalle in (ICollection<Infraestructure.Models.CompraDetalle>)pedido.CompraEncabezado.CompraDetalle.Where(compra => compra.Producto.Usuario.IdUsuario == vendedor).ToList())
                                        {
                                            <tr>
                                                <th scope="row">@Html.DisplayFor(model => compraDetalle.Producto.Nombre)</th>
                                                <th>@Html.DisplayFor(model => compraDetalle.Cantidad)</th>
                                                <th>@Html.DisplayFor(model => compraDetalle.Precio)</th>
                                                <th><button data-idproducto="@compraDetalle.IdProducto" data-idcompraencabezado="@compraDetalle.IdCompraEncabezado" data-estadoentrega="@compraDetalle.EstadoEntrega" class="ActualizarEstadoEntregado btn btn-primary fs-4 @(compraDetalle.EstadoEntrega == false ? "" : "disabled")"><i class="fa-solid @(compraDetalle.EstadoEntrega == false ? "fa-box" : "fa-box-open")"></i></button></th>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>

                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <h3 class="text-white mb-4 text-center mt-4"><i class="fa-solid fa-warning text-warning"></i> No hay pedidos pendientes</h3>
        }
    </div>
    <div class="tab-pane fade @(estadoEntrega == 2 ? "show active" : "") mt-4" id="finalizados" role="tabpanel" aria-labelledby="finalizados-tab">
        @if (Model.Where(pedido => pedido.EstadoEntrega == 2).ToList().Count() > 0)
        {
            <h3 class="text-white fw-bold mb-4">
                Finalizado
            </h3>

            <div class="row mb-4">
                @foreach (var pedido in Model.Where(p => p.EstadoEntrega == 2).ToList())
                {
                    <div class="col-md-12" style="height:100%">
                        <div class="card text-white p-3 rounded-4 bg-primary mb-3">
                            <i class="fa-solid fa-truck-fast fa-2xl m-3 shadow-lg"></i>
                            <div class="card-body">
                                <div class="d-flex">
                                    <h3 class="card-title mb-3 me-2">
                                        Pedido de
                                        @pedido.CompraEncabezado.Usuario.Nombre
                                        @pedido.CompraEncabezado.Usuario.PrimerApellido
                                        @pedido.CompraEncabezado.Usuario.SegundoApellido 
                                    </h3>
                                    <p class="card-text fs-4">
                                        <span>•</span>
                                        @for (int i = 1; i <= 5; i++)
                                        {
                                            if (i <= pedido.CompraEncabezado.Usuario.PromedioEvaluaciones)
                                            {
                                                <i class="fa-solid fa-star"></i>
                                            }
                                            else
                                            {
                                                <i class="fa-regular fa-star"></i>
                                            }
                                        }
                                        (@Html.DisplayFor(model => pedido.CompraEncabezado.Usuario.PromedioEvaluaciones) estrellas como Cliente)
                                    </p>
                                </div>
                                <p class="card-text mb-3">@Html.DisplayNameFor(model => model.CompraEncabezado.FechaHora): @Html.DisplayFor(model => pedido.CompraEncabezado.FechaHora)</p>

                                <table class="table rounded rounded-4 overflow-hidden fs-5 shadow mb-4 text-center">
                                    <thead class="table-primary">
                                        <tr>
                                            <th scope="col">Producto</th>
                                            <th scope="col">Cantidad</th>
                                            <th scope="col">Sub-Total</th>
                                        </tr>
                                    </thead>
                                    <tbody class="table-dark">
                                        @foreach (var compraDetalle in (ICollection<Infraestructure.Models.CompraDetalle>)pedido.CompraEncabezado.CompraDetalle.Where(compra => compra.Producto.Usuario.IdUsuario == vendedor).ToList())
                                        {
                                            <tr>
                                                <th scope="row">@Html.DisplayFor(model => compraDetalle.Producto.Nombre)</th>
                                                <th>@Html.DisplayFor(model => compraDetalle.Cantidad)</th>
                                                <th>@Html.DisplayFor(model => compraDetalle.Precio)</th>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                                <a href="@Url.Action("","")" class="btn btn-info fs-4 mb-4"><i class="fa-solid fa-star"></i> Calificar Cliente</a>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <h3 class="text-white mb-4 text-center mt-4"><i class="fa-solid fa-warning text-warning"></i> No hay pedidos finalizados</h3>
        }
    </div>
</div>
