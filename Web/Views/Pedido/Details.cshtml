@model Infraestructure.Models.Pedido

@{
    ViewBag.Title = "ByteStore - Tu Pedido";
}

<div>
    <div class="d-md-flex justify-content-md-center mb-4">
        <h2 class="border border-3 border-warning w-auto text-center text-light fw-bold p-3 rounded-4">
            Tu Pedido
        </h2>
    </div>
    <hr class="mb-4" />
    <div class="mb-4">
        <a href="@Url.Action("Index", "Pedido")" class="btn btn-info fs-4">Vover Atrás</a>
    </div>
    <div class="rounded-4 p-4 bg-white">
        <i class="fa-solid fa-money-bill fa-2xl m-3 shadow-lg"></i>
        <h3 class="text-center text-black fw-bold mb-4 card-title">Detalle de Factura</h3>
        <hr class="mb-4 text-black" />
        <h3 class="text-center mb-4 fw-bold card-title">Información Principal</h3>
        <h3 class="card-title fw-bold mb-4">
            @Html.DisplayNameFor(model => model.CompraEncabezado.IdCompraEncabezado):
            <span class="fw-normal">
                @Html.DisplayFor(model => model.CompraEncabezado.IdCompraEncabezado)
            </span>
        </h3>
        <h3 class="card-title fw-bold mb-4">
            @Html.DisplayNameFor(model => model.CompraEncabezado.FechaHora):
            <span class="fw-normal">
                @Html.DisplayFor(model => model.CompraEncabezado.FechaHora)
            </span>
        </h3>
        <h3 class="card-title fw-bold mb-4">
            @Html.DisplayNameFor(model => model.EstadoEntrega):
            @if (Model.EstadoEntrega == 0)
            {
                <span class="fw-normal">
                    Pendiente
                </span>
            }
            else if (Model.EstadoEntrega == 1)
            {
                <span class="fw-normal">
                    En Progreso
                </span>
            }
            else
            {
                <span class="fw-normal">
                    Finalizado
                </span>
            }
        </h3>
        <h3 class="card-title fw-bold mb-4">
            @Html.DisplayNameFor(model => model.CompraEncabezado.Direccion):
            <span class="fw-normal">
                @Html.DisplayFor(model => model.CompraEncabezado.Direccion.Sennas)
            </span>
        </h3>
        <h3 class="card-title fw-bold mb-4">
            @Html.DisplayNameFor(model => model.CompraEncabezado.MetodoPago):
            <span class="fw-normal">
                @Model.CompraEncabezado.MetodoPago.Proveedor (@Model.CompraEncabezado.MetodoPago.TipoPago.Descripcion) | @Html.DisplayFor(model => model.CompraEncabezado.MetodoPago.FechaExpiracion)
            </span>
        </h3>
        <hr class="mb-4 text-black" />
        <h3 class="text-center mb-4 fw-bold card-title">@Html.DisplayNameFor(model => model.CompraEncabezado.CompraDetalle)</h3>
        <table class="table rounded rounded-4 overflow-hidden fs-5 shadow mb-4">
            <thead class="bg-black">
                <tr class="p-4">
                    <th scope="col" class="text-white">Producto</th>
                    <th scope="col" class="text-white">Precio</th>
                    <th scope="col" class="text-white">Cantidad</th>
                    <th scope="col" class="text-white">Estado</th>
                </tr>
            </thead>
            <tbody class="table-light">
                @foreach (var detalle in (ICollection<Infraestructure.Models.CompraDetalle>)Model.CompraEncabezado.CompraDetalle)
                {
                    <tr>
                        <th scope="row" class="p-3">@detalle.Producto.Nombre</th>
                        <td>@Html.DisplayFor(model => detalle.Precio)</td>
                        <th>@detalle.Cantidad</th>
                        @if (detalle.EstadoEntrega == false)
                        {
                            <td>Sin Entregar</td>
                        }
                        else
                        {
                            <td>Entregado</td>
                        }
                    </tr>
                }
            </tbody>
        </table>
        <hr class="mb-4 text-black" />
        <h3 class="text-center mb-4 fw-bold card-title">Desglose</h3>
        <h3 class="card-title fw-bold mb-4">
            @Html.DisplayNameFor(model => model.CompraEncabezado.SubTotal):
            <span class="fw-normal">
                @Html.DisplayFor(model => model.CompraEncabezado.SubTotal)
            </span>
        </h3>
        <h3 class="card-title fw-bold mb-4">
            @Html.DisplayNameFor(model => model.CompraEncabezado.Impuesto):
            <span class="fw-normal">
                @Html.DisplayFor(model => model.CompraEncabezado.Impuesto)
            </span>
        </h3>
        <h3 class="card-title fw-bold mb-4">
            @Html.DisplayNameFor(model => model.CompraEncabezado.Total):
            <span class="fw-normal">
                @Html.DisplayFor(model => model.CompraEncabezado.Total)
            </span>
        </h3>
    </div>

    @{
        ApplicationCore.Services.IServiceEvaluacion serviceEvaluacion = new ApplicationCore.Services.ServiceEvaluacion();
        IEnumerable<Infraestructure.Models.Evaluacion> evaluaciones = serviceEvaluacion.GetEvaluacionByPedidoForCliente(Model.IdCompraEncabezado, Model.CompraEncabezado.Usuario.IdUsuario);
        int cantAEvaluar = Model.CompraEncabezado.CompraDetalle.Select(cd => new { IdUsuario = cd.Producto.Usuario.IdUsuario, Nombre = $"{cd.Producto.Usuario.Nombre} {cd.Producto.Usuario.PrimerApellido} {cd.Producto.Usuario.SegundoApellido}" }).Distinct().ToList().Count();
        IEnumerable<object> seDebenEvaluar = Model.CompraEncabezado.CompraDetalle.Select(cd => new { IdUsuario = cd.Producto.Usuario.IdUsuario, Nombre = $"{cd.Producto.Usuario.Nombre} {cd.Producto.Usuario.PrimerApellido} {cd.Producto.Usuario.SegundoApellido}" }).Distinct().ToList().Where(sde => !evaluaciones.Any(e => e.Usuario1.IdUsuario == sde.IdUsuario));
    }

    <hr class="mb-4 mt-4" />

    @if (Model.EstadoEntrega == 2)
    {
        <div id="InfoEvaluacionesTemp" class="mt-4">
            <h2 class="text-center border-3 text-white rounded-4 w-auto mb-4 mt-4">Evaluaciones de Vendedores en el Pedido</h2>
            <hr class="mb-4" />
        </div>
    }

    <div>
        <div id="InfoEvaluaciones">
            @if (evaluaciones.Count() > 0 && Model.EstadoEntrega == 2)
            {

                @Html.Partial("_PartialEvaluacionPedido", evaluaciones)
            }
        </div>
        @if (Model.EstadoEntrega == 2 && cantAEvaluar != evaluaciones.Count())
        {
            <div id="contenedorEvaluacionForm"></div>
            <button id="btnCalificarVendedor" class="btn btn-info fs-4 mb-4" data-idpedido="@Model.IdCompraEncabezado" data-idevaluador="@(((Infraestructure.Models.Usuario)Session["User"]).IdUsuario)"><i class="fa-solid fa-star"></i> Calificar Vendedor(es)</button>
        }
    </div>

</div>

@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript">

        $("#btnCalificarVendedor").on('click', function () {

            var idPedido = $(this).data('idpedido');
            var idEvaluador = $(this).data('idevaluador');
            var evaluados = @Html.Raw(Json.Encode(seDebenEvaluar));
            var esOcultar = String($(this).html()).includes("Cancelar");

            if (!esOcultar) {
                var htmlToUse = "";

                //Se crea el html
                evaluados.forEach(evaluado => {

                    htmlToUse += `
                    <form id="evaluacionForm${evaluado.IdUsuario}" class="mb-3">
                                    <div class="p-3 rounded-4 bg-body card mb-4 shadow-lg bg-gradient">
                                        <label class="mb-2 form-label text-white">Evaluar a ${evaluado.Nombre}</label>
                                        <h3 class="card-title text-white-50 mb-2 fs-4">
                                            <input type="radio" id="estrella1${evaluado.IdUsuario}" name="Escala" value="1" style="display: none;">
                                            <label for="estrella1${evaluado.IdUsuario}"><i id="labelEstrella1${evaluado.IdUsuario}" class="fa-regular fa-star estrella${evaluado.IdUsuario}" num="1" style="cursor:pointer; color: white;"></i></label>
                                            <input type="radio" id="estrella2${evaluado.IdUsuario}" name="Escala" value="2" style="display: none;">
                                            <label for="estrella2${evaluado.IdUsuario}"><i id="labelEstrella2${evaluado.IdUsuario}" class="fa-regular fa-star estrella${evaluado.IdUsuario}" num="2" style="cursor:pointer; color: white;"></i></label>
                                            <input type="radio" id="estrella3${evaluado.IdUsuario}" name="Escala" value="3" style="display: none;">
                                            <label for="estrella3${evaluado.IdUsuario}"><i id="labelEstrella3${evaluado.IdUsuario}" class="fa-regular fa-star estrella${evaluado.IdUsuario}" num="3" style="cursor:pointer; color: white;"></i></label>
                                            <input type="radio" id="estrella4${evaluado.IdUsuario}" name="Escala" value="4" style="display: none;">
                                            <label for="estrella4${evaluado.IdUsuario}"><i id="labelEstrella4${evaluado.IdUsuario}" class="fa-regular fa-star estrella${evaluado.IdUsuario}" num="4" style="cursor:pointer; color: white;"></i></label>
                                            <input type="radio" id="estrella5${evaluado.IdUsuario}" name="Escala" value="5" style="display: none;">
                                            <label for="estrella5${evaluado.IdUsuario}"><i id="labelEstrella5${evaluado.IdUsuario}" class="fa-regular fa-star estrella${evaluado.IdUsuario}" num="5" style="cursor:pointer; color: white;"></i></label>
                                        </h3>
                                        <label id="Escala${evaluado.IdUsuario}-error" class="error"></label>
                                        <div class="mb-2">
                                            <label for="CodigoPostal" class="mb-2 form-label"> Escribir comentario</label>
                                            <textarea type="text" id="Comentario${evaluado.IdUsuario}" name="Comentario" class="form-control" placeholder="Fue un gran cliente"></textarea>
                                        </div>
                                        <button id="btnEnviarCalificacionCliente${evaluado.IdUsuario}" class="btn btn-primary my-2 my-sm-0 shadow-lg" type="submit" form="evaluacionForm${evaluado.IdUsuario}">Calificar</button>
                                    </div>
                    </form>
                `

                });

                $("#contenedorEvaluacionForm").html("");
                $("#contenedorEvaluacionForm").html(htmlToUse);

                //Se crean efectos de estrellas por form
                evaluados.forEach(evaluado => {

                    $(`.estrella${evaluado.IdUsuario}`).hover(
                        function () {
                            var numeroEstrella = Number($(this).attr('num'));

                            for (var i = 1; i <= numeroEstrella; i++) {
                                $(`#labelEstrella${i}${evaluado.IdUsuario}`).addClass('fa-solid');
                            }
                        },
                        function () {
                            var numeroEstrella = Number($(this).attr('num'));

                            for (var i = 1; i <= numeroEstrella; i++) {
                                $(`#labelEstrella${i}${evaluado.IdUsuario}`).removeClass('fa-solid');
                            }
                        }
                    );

                    $(`.estrella${evaluado.IdUsuario}`).on('click',
                        function () {

                            var numeroEstrella = Number($(this).attr('num'));

                            $(`.estrella${evaluado.IdUsuario}`).off("mouseenter mouseleave");

                            for (var i = 1; i <= 5; i++) {

                                if (i <= numeroEstrella) {
                                    $(`#labelEstrella${i}${evaluado.IdUsuario}`).addClass('fa-solid');
                                    $(`#labelEstrella${i}${evaluado.IdUsuario}`).css('color', 'rgb(255,215,0)');
                                }
                                else {
                                    $(`#labelEstrella${i}${evaluado.IdUsuario}`).removeClass('fa-solid');
                                    $(`#labelEstrella${i}${evaluado.IdUsuario}`).css('color', 'white');
                                }
                            }
                        }
                    );
                });

                //Se cran los formularios
                evaluados.forEach(evaluado => {

                    var idFormulario = `#evaluacionForm${evaluado.IdUsuario}`;

                    $(idFormulario).validate({
                        errorClass: "error",
                        rules: {
                            Comentario: {
                                required: true,
                                minlength: 10
                            }
                        },
                        messages: {
                            Comentario: "Debe escribir un comentario de mínimo 10 carárteres"
                        },
                        submitHandler: function (form, event) {
                            event.preventDefault();

                            var comentario = $(form).find('[name="Comentario"]').val();
                            var escala = $(form).find('[name="Escala"]:checked').val();
                            var idEvaluado = evaluado.IdUsuario;



                            if (escala === undefined) {
                                var aviso = "@Html.Raw(Web.Util.SweetAlertHelper.Mensaje("Cuidado", "Debe calificar al cliente", Web.Util.SweetAlertMessageType.warning))"
                                eval(aviso);
                            }
                            else {

                                console.log(idEvaluador, idEvaluado, idPedido, comentario, escala)


                                $.ajax({
                                    method: "POST",
                                    url: "/Pedido/SaveEvaluacion",
                                    data: { idEvaluador, idEvaluado, idPedido, comentario, escala },
                                    success: function (result) {

                                        if (result.success) {



                                            $("#loaderSpinner").removeClass("d-none");

                                            $.ajax({
                                                method: "GET",
                                                url: "/Pedido/EvaluacionPedidoCliente",
                                                data: { idPedido, idUsuario: idEvaluador },
                                                success: function (html) {
                                                    $("#InfoEvaluaciones").html("");
                                                    $(`#InfoEvaluacionesTemp`).html("");
                                                    $(`#InfoEvaluacionesTemp`).html('<h2 class="text-center border-3 text-white rounded-4 w-auto mb-4 mt-4">Evaluaciones de Vendedores en el Pedido</h2><hr class= "mb-4"/>' + html);
                                                    $(idFormulario).hide();
                                                    $("#btnCalificarVendedor").hide();
                                                    $("#loaderSpinner").addClass("d-none");
                                                },
                                                error: function (xhr, status, error) {
                                                    console.log("error" + error, "no Error: " + xhr.status)

                                                }
                                            });

                                            console.log("Funcionó!!")
                                        }

                                    },
                                    error: function (xhr, status, error) {
                                        console.log("error" + error, "no Error: " + xhr.status)

                                    }
                                });

                            }
                        }
                    });
                });

                $(this).html("");
                $(this).html('<i class="fa-solid fa-x"></i> Cancelar');
            }
            else {
                $("#contenedorEvaluacionForm").html("");
                $(this).html("");
                $(this).html('<i class="fa-solid fa-star"></i> Calificar Vendedor(es)');
            }
        });
</script>

}