@model Infraestructure.Models.Usuario

@{
    ViewBag.Title = "ByteStore - Registrate";
}



@using (Html.BeginForm("Save", "Usuario", FormMethod.Post, new { enctype = "multipart/form-data" }))

{
    @Html.AntiForgeryToken()

    <div class="row justify-content-center">

        <div class="col-md-12 p-3 rounded-3 border border-2 border-success" style="background-color: rgba(14, 102, 85, 0.9); color:white">
            <h3>Datos Personales</h3>
            <p>Todos los campos son requeridos</p>

            
            <div class="row g-3">

                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Identificacion, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.Identificacion, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Identificacion, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.PrimerApellido, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.PrimerApellido, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PrimerApellido, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.SegundoApellido, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.SegundoApellido, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.SegundoApellido, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.CorreoElectronico, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.CorreoElectronico, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CorreoElectronico, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>



                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Contrasenna, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-12">
                            @Html.PasswordFor(model => model.Contrasenna, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Contrasenna, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>


                <div class="col-md-4">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.NombreProveedor, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.NombreProveedor, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.NombreProveedor, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>




                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.PromedioEvaluaciones, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.PromedioEvaluaciones, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PromedioEvaluaciones, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <br />



                @Html.LabelFor(model => model.Rol, htmlAttributes: new { @class = "control-label" })
                <div class=" row col-md-12">
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.DropDownListFor(model => model.Rol, (SelectList)ViewBag.listaRoles, "Seleccione", htmlAttributes: new { @class = "form-select form-control me-sm-2 text-black" })
                            @Html.ValidationMessageFor(model => model.Rol, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="row col-md-8">
                        <div class="col-md-2">
                            <input type="submit" data-id="AgregarRol" class="btn btn-primary" value="Agregar" />
                        </div>


                        <div class="col-md-6">
                            <table class="table table-hover text-center">
                                <thead>
                                    <tr>
                                        <th scope="col">Rol</th>
                                        <th scope="col">Acción</th>

                                    </tr>
                                </thead>

                                <tbody>
                                </tbody>
                            </table>

                        </div>
                    </div>

                </div>


                <hr />


                @Html.Partial("_PartialTelefonos")

                <hr />

                @Html.Partial("_PartialDireccion")



                <hr />



                @Html.Partial("_PartialMetodosPago")


                <div class="form-group  col-md-12">
                    <div class="col-md-offset-2 text-center  ">
                        <input type="submit" class="btn btn-success" value="Registrarse" />
                        <a href="@Url.Action("Index","Home")" class="btn btn-secondary m-3"> Cancelar</a>

                    </div>
                </div>
            </div>
            </div>
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

<script type="text/javascript">

    var idProvincia = -1;

        $(document).ready(function () {
            $.ajax({
                method: "GET",
                url: "/Usuario/ObtenerProvincias",
                data: { },
                success: function (result) {

                    var html = '<option value="-1" class="active provincia">Provincia</option>'

                    var data = (result.Result.replace('{', "").replace('}', "").split(","));

                    data.forEach(provincia => {

                        provincia = provincia.split(":")
                        html += `<option value=${provincia[0]} class="active provincia">${provincia[1].replace(/\"+/g, "")}</option >`
                    })

                    $("#Provincia").html("");
                    $("#Provincia").html(html);
                },
                error: function (xhr, status, error) {
                    console.log("error" + error, "no Error: " + xhr.status)

                }
            })
        });

    $("#Provincia").on("change", function () {

        idProvincia = $(this).val();
        
        $.ajax({
            method: "GET",
            url: "/Usuario/ObtenerCantonesxProvincia",
            data: { idProvincia },
            success: function (result) {

                var html = '<option value="-1" class="active canton">Cantón</option>'

                var data = (result.Result.replace('{', "").replace('}', "").split(","));

                data.forEach(canton => {

                    canton = canton.split(":")
                    html += `<option value=${canton[0]} class="active canton">${canton[1].replace(/\"+/g, "")}</option >`
                })

                $("#Canton").html("");
                $("#Canton").html(html);
                $("#Distrito").html("");
                $("#Distrito").html('<option value="-1" class="active distrito">Distrito</option>');
            },
            error: function (xhr, status, error) {
                console.log("error" + error, "no Error: " + xhr.status)
                $("#Canton").html("");
                $("#Canton").html('<option value="-1" class="active canton">Cantón</option>');
                $("#Distrito").html("");
                $("#Distrito").html('<option value="-1" class="active distrito">Distrito</option>');
            }
        })
    });

    $("#Canton").on("change", function () {

        var idCanton = $(this).val();

        $.ajax({
            method: "GET",
            url: "/Usuario/ObtenerDistritosxCanton",
            data: { idProvincia, idCanton },
            success: function (result) {

                var html = '<option value="-1" class="active distrito">Distrito</option>'

                var data = (result.Result.replace('{', "").replace('}', "").split(","));

                data.forEach(distrito => {

                    distrito = distrito.split(":")
                    html += `<option value=${distrito[0]} class="active distrito">${distrito[1].replace(/\"+/g, "")}</option >`
                })

                console.log(html)

                $("#Distrito").html("");
                $("#Distrito").html(html);
            },
            error: function (xhr, status, error) {
                console.log("error" + error, "no Error: " + xhr.status)
                $("#Distrito").html("");
                $("#Distrito").html('<option value="-1" class="active distrito">Distrito</option>');
            }
        })
    });

</script>
}
