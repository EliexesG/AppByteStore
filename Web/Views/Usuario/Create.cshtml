@model Infraestructure.Models.Usuario

@{
    ViewBag.Title = "ByteStore - Registrate";
}



@using (Html.BeginForm("SaveUsuario", "Usuario", FormMethod.Post, new { enctype = "multipart/form-data" }))

{
    @Html.AntiForgeryToken()

    <div class="row justify-content-center">

        <div class="col-md-12 p-3 rounded-3 border border-2 border-success" style="background-color: rgba(14, 102, 85, 0.9); color:white">
            <h3>Datos Personales</h3>
            <p>Todos los campos son requeridos</p>


            <div class="row g-3">

                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Identificacion, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.Identificacion, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Identificacion, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.PrimerApellido, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.PrimerApellido, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PrimerApellido, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.SegundoApellido, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.SegundoApellido, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.SegundoApellido, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.CorreoElectronico, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.CorreoElectronico, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CorreoElectronico, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>



                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Contrasenna, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-12">
                            <input type="password" class="form-control" name="password" value="" data-val="true" data-val-required="La contraseña es requerida" />
                            @Html.ValidationMessage("password", "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>


                <div class="col-md-4">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.NombreProveedor, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.NombreProveedor, new { htmlAttributes = new { @class = "form-control", @id = "NombreProveedor", @disabled = true } })
                            @Html.ValidationMessageFor(model => model.NombreProveedor, "", new { @class = "text-danger", @id = "ValidacionProveedor" })
                        </div>
                    </div>
                </div>

                <br class="mb-4" />

                @Html.LabelFor(model => model.Rol, htmlAttributes: new { @class = "control-label me-3" })
                <div class=" row col-md-12">
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.DropDownList("selectedRol", (MultiSelectList)ViewBag.listaRoles, htmlAttributes: new { @name="roles", @class = "form-select form-control me-sm-2 text-black", multiple = "multiple", @id = "SelectedRol", @required = true })
                            @Html.ValidationMessage("roles", "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-md-12 text-center">
                    <input type="submit" class="btn btn-info" value="Registrarse" />
                </div>
            </div>
        </div>
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">

        $("#SelectedRol").on('change', function () {

            var roles = $(this).val();

            for (var i = 0; i < roles.length; i++) {

                console.log(roles[i])

                if (roles[i] == "2") {
                    $("#NombreProveedor").prop("disabled", false);
                    $("#ValidacionProveedor").show();
                    break;
                }
                else {
                    $("#NombreProveedor").prop("disabled", true);
                    $("#ValidacionProveedor").hide();
                    break;
                }
            }

        });
    </script>
}
