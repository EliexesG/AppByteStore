
@{
    ViewBag.Title = "ByteStore - Reportes para Vendedor";
}


<div class="d-md-flex justify-content-md-center mb-4">
    <h2 class="border border-secondary border-3 w-auto text-center text-light fw-bold p-3 rounded-4">
        Reporte de Ventas y Evaluaciones
    </h2>
</div>

<h3 class="text-white mb-4 text-center">En este apartado podrás encontrar los reportes de vendedor</h3>
<hr class="mb-4" />

<div class="row justify-content-center mb-4 p-3">
    <div class="reporte col-md-6 border border-4 border-primary text-light fw-bold rounded-4 bg-light mb-4 g-1">
        <h5 class="mb-2 text-center text-black p-3">Producto más Vendido</h5>
        <canvas id="productoMasVendido"></canvas>
    </div>
    <div class="reporte col-md-6 border border-4 border-success text-light fw-bold rounded-4 bg-light mb-4 g-1">
        <h5 class="mb-2 text-center text-black p-3">Cliente más Fiel (Quien más ha Comprado)</h5>
        <canvas id="clienteMasFiel"></canvas>
    </div>
</div>

<hr class="mb-4" />

<div class="row justify-content-center mb-4">

    <div class="reporte col-md-6 border border-4 border-danger text-light fw-bold rounded-4 bg-light mb-4 p-3">
        <h5 class="mb-2 text-center text-black p-3">Cantidad de Evaluaciones por Escala</h5>
        <canvas id="evaluaciones"></canvas>
    </div>

</div>

<style type="text/css">

    .reporte {
        transition: all 0.3s;
    }

        .reporte:hover {
            transform: scale(1.1);
        }
</style>

@section Scripts {

    <script type="text/javascript">

      $(document).ready(function () {

          var idVendedor = @Html.Raw(Json.Encode(((Infraestructure.Models.Usuario)Session["User"]).IdUsuario));
          console.log(idVendedor)

            $.ajax({
                method: "GET",
                url: "/Reportes/GetProductoMasVendidoVendedor",
                data: { idVendedor },
                success: function (result) {

                    var ctx = $('#productoMasVendido')[0].getContext('2d');
                    var myChart = new Chart(ctx, {
                        type: 'bar',
                        data: {
                            labels: [result.productoMasVendido.NombreProducto],
                            datasets: [{
                                label: "Total de Unidades Vendidas",
                                data: [result.productoMasVendido.TotalVendidos],
                                backgroundColor: 'rgba(255,215,0, 0.5)',
                                borderColor: 'rgba(255,215,0,1)',
                                borderWidth: 2
                            }]
                        },
                        options: {
                            scales: {
                                y: {
                                    beginAtZero: true
                                },
                            }
                        }
                    });

                },
                error: function (xhr, status, error) {
                    console.log("error" + error, "no Error: " + xhr.status)
                }
            });

            $.ajax({
                method: "GET",
                url: "/Reportes/GetClienteMasFiel",
                data: { idVendedor },
                success: function (result) {

                    var ctx = $('#clienteMasFiel')[0].getContext('2d');
                    var myChart = new Chart(ctx, {
                        type: 'bar',
                        data: {
                            labels: [`${result.clienteMasFiel.NombreUsuario} ${result.clienteMasFiel.PrimerApellido}`],
                            datasets: [{
                                label: 'Cantidad de Articulos Comprados',
                                data: [result.clienteMasFiel.TotalComprado],
                                backgroundColor: 'rgba(43, 94, 33, 0.5)',
                                borderColor: 'rgba(43, 94, 33 , 1)',
                                borderWidth: 2
                            }]
                        },
                        options: {
                            scales: {
                                y: {
                                    beginAtZero: true
                                }
                            }
                        }
                    });

                },
                error: function (xhr, status, error) {
                    console.log("error" + error, "no Error: " + xhr.status)
                }
            });


          $.ajax({
              method: "GET",
              url: "/Reportes/CantEvaluacionesPorEscalaVendedor",
              data: { idVendedor },
              success: function ({ EvaluacionesPorEscala }) {

                  var colores = [
                      'rgba(202, 43, 47, {opacity})',
                      'rgba(117, 54, 124, {opacity})',
                      'rgba(199, 214, 103, {opacity})',
                      'rgba(70, 140, 162, {opacity})',
                      'rgba(63, 121, 67, {opacity})']

                  var coloresMostrar = colores.map((element, index) => {
                      if (EvaluacionesPorEscala.some(e => {
                          return (e.Escala - 1) === index
                      })) {
                          return element;
                      }
                  })

                  coloresMostrar = coloresMostrar.filter(cm => cm)

                  coloresMostrar.sort((a, b) => {
                      const [a1] = a.match(/\d+/);
                      const [b1] = b.match(/\d+/);
                      return a1 - b1;
                  });

                  console.log(coloresMostrar)

                    var ctx = $('#evaluaciones')[0].getContext('2d');
                    var myChart = new Chart(ctx, {
                        type: 'pie',
                        data: {
                            labels: EvaluacionesPorEscala.map(e => `${e.Escala} estrella(s)`),
                            datasets: [{
                                label: 'Evaluaciones por escala',
                                data: EvaluacionesPorEscala.map(e => e.CantidadEvaluaciones),
                                backgroundColor: coloresMostrar.map(e => e.replace('{opacity}', '0.5')),
                                borderColor: coloresMostrar.map(e => e.replace('{opacity}', '1')),
                                borderWidth: 2
                            }]
                        },
                        options: {
                            scales: {
                                y: {
                                    beginAtZero: true
                                }
                            }
                        }
                    });

                },
                error: function (xhr, status, error) {
                    console.log("error" + error, "no Error: " + xhr.status)
                }
            });
    });

    </script>


}



