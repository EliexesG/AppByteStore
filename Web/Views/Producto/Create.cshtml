@model Infraestructure.Models.Producto

@{
    ViewBag.Title = "ByteStore - Publica tu Producto";
}

<div class="row justify-content-md-center mb-4">
    <h2 class="border border-3 border-success w-auto text-center text-light fw-bold p-3 rounded-4">Publica tu producto</h2>

</div>

@using (Html.BeginForm("Save", "Producto", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="row justify-content-center">

        <div class=" w-75 row g-3 p-3 rounded-3 border border-2 border-success" style="background-color: rgba(14, 102, 85, 0.9);">

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2 mb-2" })
                <div>
                    @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control", @placeholder = "Mario Bros 2" } })
                    @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-6">

                @Html.LabelFor(model => model.Categoria, htmlAttributes: new { @class = "control-label col-md-2 mb-2" })
                <div class="">
                    @Html.DropDownListFor(model => model.Categoria.IdCategoria, (SelectList)ViewBag.listaCategoria, "Seleccione una Categoría", htmlAttributes: new { @class = "form-select form-control me-sm-2 text-black" })
                    @Html.ValidationMessageFor(model => model.Categoria.IdCategoria, "", new { @class = "text-danger" })
                </div>
            </div>

            <hr class="mb-3" />

            <div class="form-group col-md-12">
                @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "control-label col-md-2 mb-2" })
                <div>

                    @Html.TextAreaFor(model => model.Descripcion, new { @class = "form-control", @style = "min-height: 100px;", placeholder = "Un juego de aventuras" })
                    @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
                </div>
            </div>

            <hr class="mb-3" />

            <div class="form-group col-md-5">

                @Html.LabelFor(model => model.Precio, htmlAttributes: new { @class = "control-label col-md-2 mb-2" })
                <div>
                    <div class="input-group mb-3">
                        <span class="input-group-text">&cent;</span>
                        @Html.EditorFor(model => model.Precio, new { htmlAttributes = new { @class = "form-control", @placeholder = "2500" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.Precio, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-2">
                @Html.LabelFor(model => model.Stock, htmlAttributes: new { @class = "control-label col-md-2  mb-2" })
                <div>
                    @Html.EditorFor(model => model.Stock, new { htmlAttributes = new { @class = "form-control", @placeholder = "5" } })
                    @Html.ValidationMessageFor(model => model.Stock, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-5">
                @Html.LabelFor(model => model.Estado, htmlAttributes: new { @class = "control-label col-md-2 mb-2" })
                <div>
                    @Html.DropDownListFor(model => model.Estado, (SelectList)ViewBag.listaEstados, "Seleccione un Estado", htmlAttributes: new { @class = "form-select form-control me-sm-2 text-black" })
                    @Html.ValidationMessageFor(model => model.Estado, "", new { @class = "text-danger" })
                </div>
            </div>

            <hr class="mb-3" />

            <div class="form-group col-md-12">
                @Html.LabelFor(model => model.FotoProducto, htmlAttributes: new { @class = "control-label mb-2" })
                <div>
                    <input type="file" name="ImageFiles" class="form-control" required multiple id="inputImagenes" />
                    @Html.ValidationMessageFor(model => model.FotoProducto, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group justify-content-center">
                <label class="control-label mb-2 mt-3">Lista de Fotos a Guardar</label>
                <div class="me-2 row justify-content-center p-2" id="listaFotos">
                    <h4 class="ms-3">Vacia</h4>
                </div>
            </div>

            <hr class="mb-3" />

            <div class="form-group  col-md-12">
                <div class="col-md-offset-2 text-center  ">
                    <input type="submit" class="btn btn-success" value="Publicar producto" />
                    <a href="@Url.Action("IndexVendedor","Producto")" class="btn btn-secondary m-3"> Cancelar</a>
                </div>
            </div>
        </div>
    </div>
}

<style>
    .control-label{
        color: white;
        
    }
</style>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        $('#inputImagenes').on('change', function () {

            var html = "";
            var input = $(this)[0];

            for (var i = 0; i < input.files.length; i++) {
                let reader = new FileReader();

                reader.onload = function (event) {

                    var url = event.target.result;
                    html += `<div class="col-2 p-2 m-2 rounded bg-white"><img class="img-fluid" src="${url}" alt="foto${i}" /></div>`;

                    if (i === input.files.length) {
                        $("#listaFotos").html("")
                        $("#listaFotos").html(html)
                    }
                };

                reader.readAsDataURL(input.files[i]);
            }

        });
    </script>
}

