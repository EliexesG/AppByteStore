@model Infraestructure.Models.Producto


@{
    ViewBag.Title = "ByteStore - " + @Html.DisplayFor(modelItem => modelItem.Nombre);
    bool first = true;
}

<style type="text/css">
    #fotosProducto {
        height: 700px
    }

    .carousel-inner {
        height: 0;
        padding-bottom: 25%; /* this sets carousel aspect ratio (4:1 here) */
    }

    .carousel-item {
        position: absolute !important;
        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
    }

        .carousel-item img {
            height: 100%; /* Bootstrap handles width already */
            width: 100%;
            object-fit: scale-down; /* or 'contain' if you want stretch instead of crop */
        }
</style>

<div class="d-md-flex justify-content-md-center mb-4">
    <h2 class="w-auto text-center border border-primary border-3 text-light fw-bold p-3 rounded-4">
        @Html.DisplayFor(modelItem => modelItem.Nombre):
        @if (Model.Stock > 0)
        {
            <span style="color: green"> Disponible (@Model.Stock en Stock) </span>
        }
        else
        {
            <span style="color: red;">Agotado</span>
        }
    </h2>
</div>
<hr class="mb-4" />

<div class="d-flex mb-4">
    <a href="@Url.Action(ViewBag.GetBack, "Producto")" class="btn btn-info fs-4 me-4">Vover Atrás</a>
    @if (Model.Stock > 0 && Web.Security.AutorizeView.IsUserInRole(new string[] {"Vendedor", "Cliente"}) && (Session["User"] as Infraestructure.Models.Usuario).IdUsuario != Model.Usuario.IdUsuario)
    {
        <a href="@Url.Action("","")" class="btn btn-primary fs-4"><i class="fa-solid fa-cart-shopping"></i> Agregar al Carrito</a>
    }
</div>

<div class="row mb-4">
    <div class="col-md-5 mb-4">
        <div class="card text-white p-3 rounded-4 bg-body bg-gradient mb-3" style="height:100%;">
            <i class="fa-solid fa-circle-info fa-2xl m-3 shadow-lg"></i>
            <div class="card-body">
                <div class="mb-4">
                    <h3 class="card-title fw-bold">@Html.DisplayNameFor(model => model.Usuario.NombreProveedor)</h3>
                    <p class="card-text fs-4">
                        • @Html.DisplayFor(model => model.Usuario.NombreProveedor)
                    </p>
                </div>
                <hr class="mb-4" />
                <div class="mb-4">
                    <h3 class="card-title fw-bold">@Html.DisplayNameFor(model => model.Usuario.PromedioEvaluaciones)</h3>
                    <p class="card-text fs-4">
                        •
                        @for (int i = 1; i <= 5; i++)
                        {
                            if (i <= Model.Usuario.PromedioEvaluaciones)
                            {
                                <i class="fa-solid fa-star"></i>
                            }
                            else
                            {
                                <i class="fa-regular fa-star"></i>
                            }
                        }
                         (@Html.DisplayFor(model => model.Usuario.PromedioEvaluaciones) estrellas)
                    </p>
                </div>
                <hr class="mb-4" />
                <div class="mb-4">
                    <h3 class="card-title fw-bold">@Html.DisplayNameFor(model => model.Categoria)</h3>
                    <p class="card-text fs-4">
                        • @Html.DisplayFor(model => model.Categoria.Descripcion)
                    </p>
                </div>
                <hr class="mb-4" />
                <div class="mb-4">
                    <h3 class="card-title fw-bold">@Html.DisplayNameFor(model => model.Estado)</h3>
                    @if (Model.Estado == 0)
                    {
                        <p class="card-text fs-4">
                            • Nuevo
                        </p>
                    }
                    else if (Model.Estado == 1)
                    {
                        <p class="card-text fs-4">
                            • Usado (Como Nuevo)
                        </p>
                    }
                    else if (Model.Estado == 2)
                    {
                        <p class="card-text fs-4">
                            • Usado (Buen Estado)
                        </p>
                    }
                    else
                    {
                        <p class="card-text fs-4">
                            • Usado (Aceptable)
                        </p>
                    }
                </div>
            </div>
        </div>
    </div>
    <div id="fotosProducto" class="carousel slide mb-4 bg-body bg-gradient rounded-4 p-3 col-md-7" data-bs-ride="carousel">
        <div class="carousel-indicators text-dark">
            <button type="button" data-bs-target="#fotosProducto" data-bs-slide-to="0" class="active" aria-current="true" aria-label="Foto 1"></button>
            @for (int i = 1; i < Model.FotoProducto.Count(); i++)
            {
                <button type="button" data-bs-target="#fotosProducto" data-bs-slide-to="@i" aria-label="Foto @i"></button>
            }
        </div>
        <div class="carousel-inner h-100 rounded-4">
            <div class="carousel-item active mb-5">
                <img src="data:image/jpeg;charset=utf-8;base64,@Convert.ToBase64String(Model.FotoProducto.First().Foto)" class="d-block bg-black" alt="...">
            </div>
            @for (int i = 1; i < Model.FotoProducto.Count(); i++)
            {
                <div class="carousel-item mb-5">
                    <img src="data:image/jpeg;charset=utf-8;base64,@Convert.ToBase64String(Model.FotoProducto.ElementAt(i).Foto)" class="d-block bg-black" alt="...">
                </div>
            }
        </div>
        <button class="carousel-control-prev" type="button" data-bs-target="#fotosProducto" data-bs-slide="prev">
            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
            <span class="visually-hidden">Previous</span>
        </button>
        <button class="carousel-control-next" type="button" data-bs-target="#fotosProducto" data-bs-slide="next">
            <span class="carousel-control-next-icon" aria-hidden="true"></span>
            <span class="visually-hidden">Next</span>
        </button>
    </div>
    <div class="col-md-12 mb-4">
        <div class="card text-white p-3 rounded-4 bg-body" style="height:100%; width: 100%;">
            <i class="fa-solid fa-circle-info fa-2xl m-3 shadow-lg"></i>
            <div class="card-body">
                <h3 class="card-title fw-bold">@Html.DisplayNameFor(model => model.Descripcion)</h3>
                <p class="card-text fs-4" style="text-align: justify;">
                    @Html.DisplayFor(model => model.Descripcion)
                </p>
            </div>
        </div>
    </div>
</div>

<hr class="mb-4" />

<div>
    <h2 class="w-auto text-center border border-primary border-3 text-light rounded-4 mb-5 p-3">Preguntas</h2>

    <form class="d-flex mb-4" style="height:60px;">
        @Html.TextBox("pregunta", "", new { @class = "form-control me-sm-2 text-black bg-white", @placeholder = "Escribir Pregunta" })
        <button id="btnPregunta" class="btn btn-info my-2 my-sm-0" type="button">Subir</button>
    </form>

    <hr class="mb-4" />

    @if (Model.Pregunta.Count() > 0)
    {
        <button id="btnPreguntas" class="btn btn-info mb-4 w-100" type="button">Mostrar Preguntas</button>
        <div class="mb-4" id="preguntas">
            @foreach (var pregunta in Model.Pregunta)
            {
                <div class="w-75 p-3 rounded-4 bg-body card mb-4 @(first ? "bg-gradient" : "")">
                    <h3 class="card-title text-white mb-3">
                        <i class="fa-solid fa-user m-3 shadow-lg"></i>
                        @pregunta.Usuario.Nombre @pregunta.Usuario.PrimerApellido @pregunta.Usuario.SegundoApellido •
                        <span class="fs-5">@Html.DisplayFor(model => pregunta.FechaHora)</span>
                    </h3>
                    <h4 class="card-text text-white-50 mb-4">@pregunta.Pregunta1</h4>
                    @if (Web.Security.AutorizeView.IsUserInRole(new string[] { "Vendedor" }) && (Session["User"] as Infraestructure.Models.Usuario).IdUsuario == Model.Usuario.IdUsuario)
                    {
                        <button class="btn btn-info w-25" type="button"><i class="fa-solid fa-reply"></i> Responder</button>
                    }
                </div>

                {
                    if (first)
                    {
                        first = false;
                    }
                }

                foreach (var respuesta in pregunta.Respuesta)
                {
                    <div class="row mb-4">
                        <div class="col-1">
                            <div class="vr h-100 text-white"></div>
                        </div>
                        <div class="w-75 p-3 rounded-4 bg-body card col-5">
                            <h3 class="card-title text-white mb-3">
                                <i class="fa-solid fa-user m-3 shadow-lg"></i>
                                @respuesta.Usuario.Nombre @respuesta.Usuario.PrimerApellido @respuesta.Usuario.SegundoApellido (@respuesta.Usuario.NombreProveedor) •
                                <span class="fs-5">@Html.DisplayFor(model => respuesta.FechaHora)</span>
                            </h3>
                            <h4 class="card-text text-white-50">@respuesta.Respuesta1</h4>
                        </div>
                    </div>
                }
            }
        </div>
    }
    else
    {
        <h3 class="text-white mb-4 text-center mt-4"><i class="fa-solid fa-warning text-warning"></i> No hay preguntas realizadas</h3>
    }
</div>

@section Scripts {
    <script type="text/javascript">
        $(function () {
            $("#preguntas").hide();
        });

        $('#btnPreguntas').click(function () {
            $("#preguntas").show();
            $('#btnPreguntas').hide();
        });
    </script>
}