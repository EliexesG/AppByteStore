@model Infraestructure.Models.Producto


@{
    bool desabilitarAgregarPregunta = !Web.Security.AutorizeView.IsUserInRole(new string[] { "Cliente" });
    ViewBag.Title = "ByteStore - " + @Html.DisplayFor(modelItem => modelItem.Nombre);
}

<style type="text/css">
    #fotosProducto {
        height: 700px
    }

    .carousel-inner {
        height: 0;
        padding-bottom: 25%; /* this sets carousel aspect ratio (4:1 here) */
    }

    .carousel-item {
        position: absolute !important;
        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
    }

        .carousel-item img {
            height: 100%; /* Bootstrap handles width already */
            width: 100%;
            object-fit: scale-down; /* or 'contain' if you want stretch instead of crop */
        }
</style>

<div class="d-md-flex justify-content-md-center mb-4">
    <h2 class="w-auto text-center border border-primary border-3 text-light fw-bold p-3 rounded-4">
        @Html.DisplayFor(modelItem => modelItem.Nombre)
        @if (Model.Stock > 0)
        {
            <span style="color: green"> Disponible (@Model.Stock en Stock) </span>
        }
        else
        {
            <span style="color: red;">Agotado</span>
        }
    </h2>
</div>
<hr class="mb-4" />

<div class="d-flex mb-4">
    <a href="@Url.Action(ViewBag.GetBack, "Producto")" class="btn btn-info fs-4 me-4">Vover Atrás</a>
    @if (Model.Stock > 0 && Web.Security.AutorizeView.IsUserInRole(new string[] { "Vendedor", "Cliente" }) && (Session["User"] as Infraestructure.Models.Usuario).IdUsuario != Model.Usuario.IdUsuario)
    {
        <a href="@Url.Action("","")" class="btn btn-primary fs-4"><i class="fa-solid fa-cart-shopping"></i> Agregar al Carrito</a>
    }
</div>

<div class="row mb-4">
    <div class="col-md-5 mb-4">
        <div class="card text-white p-3 rounded-4 bg-body bg-gradient mb-3" style="height:100%;">
            <i class="fa-solid fa-circle-info fa-2xl m-3 shadow-lg"></i>
            <div class="card-body">
                <div class="mb-4">
                    <h3 class="card-title fw-bold">@Html.DisplayNameFor(model => model.Usuario.NombreProveedor)</h3>
                    <p class="card-text fs-4">
                        • @Html.DisplayFor(model => model.Usuario.NombreProveedor)
                    </p>
                </div>
                <hr class="mb-4" />
                <div class="mb-4">
                    <h3 class="card-title fw-bold">@Html.DisplayNameFor(model => model.Usuario.PromedioEvaluaciones)</h3>
                    <p class="card-text fs-4">
                        •
                        @for (int i = 1; i <= 5; i++)
                        {
                            if (i <= Model.Usuario.PromedioEvaluaciones)
                            {
                                <i class="fa-solid fa-star"></i>
                            }
                            else
                            {
                                <i class="fa-regular fa-star"></i>
                            }
                        }
                        (@Html.DisplayFor(model => model.Usuario.PromedioEvaluaciones) estrellas)
                    </p>
                </div>
                <hr class="mb-4" />
                <div class="mb-4">
                    <h3 class="card-title fw-bold">@Html.DisplayNameFor(model => model.Categoria)</h3>
                    <p class="card-text fs-4">
                        • @Html.DisplayFor(model => model.Categoria.Descripcion)
                    </p>
                </div>
                <hr class="mb-4" />
                <div class="mb-4">
                    <h3 class="card-title fw-bold">@Html.DisplayNameFor(model => model.Estado)</h3>
                    @if (Model.Estado == 0)
                    {
                        <p class="card-text fs-4">
                            • Nuevo
                        </p>
                    }
                    else if (Model.Estado == 1)
                    {
                        <p class="card-text fs-4">
                            • Usado (Como Nuevo)
                        </p>
                    }
                    else if (Model.Estado == 2)
                    {
                        <p class="card-text fs-4">
                            • Usado (Buen Estado)
                        </p>
                    }
                    else
                    {
                        <p class="card-text fs-4">
                            • Usado (Aceptable)
                        </p>
                    }
                </div>
            </div>
        </div>
    </div>
    <div id="fotosProducto" class="carousel slide mb-4 bg-body bg-gradient rounded-4 p-3 col-md-7" data-bs-ride="carousel">
        <div class="carousel-indicators text-dark">
            <button type="button" data-bs-target="#fotosProducto" data-bs-slide-to="0" class="active" aria-current="true" aria-label="Foto 1"></button>
            @for (int i = 1; i < Model.FotoProducto.Count(); i++)
            {
                <button type="button" data-bs-target="#fotosProducto" data-bs-slide-to="@i" aria-label="Foto @i"></button>
            }
        </div>
        <div class="carousel-inner h-100 rounded-4">
            <div class="carousel-item active mb-5">
                <img src="data:image/jpeg;charset=utf-8;base64,@Convert.ToBase64String(Model.FotoProducto.First().Foto)" class="d-block bg-black" alt="...">
            </div>
            @for (int i = 1; i < Model.FotoProducto.Count(); i++)
            {
                <div class="carousel-item mb-5">
                    <img src="data:image/jpeg;charset=utf-8;base64,@Convert.ToBase64String(Model.FotoProducto.ElementAt(i).Foto)" class="d-block bg-black" alt="...">
                </div>
            }
        </div>
        <button class="carousel-control-prev" type="button" data-bs-target="#fotosProducto" data-bs-slide="prev">
            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
            <span class="visually-hidden">Previous</span>
        </button>
        <button class="carousel-control-next" type="button" data-bs-target="#fotosProducto" data-bs-slide="next">
            <span class="carousel-control-next-icon" aria-hidden="true"></span>
            <span class="visually-hidden">Next</span>
        </button>
    </div>
    <div class="col-md-12 mb-4">
        <div class="card text-white p-3 rounded-4 bg-body" style="height:100%; width: 100%;">
            <i class="fa-solid fa-circle-info fa-2xl m-3 shadow-lg"></i>
            <div class="card-body">
                <h3 class="card-title fw-bold">@Html.DisplayNameFor(model => model.Descripcion)</h3>
                <p class="card-text fs-4" style="text-align: justify;">
                    @Html.DisplayFor(model => model.Descripcion)
                </p>
            </div>
        </div>
    </div>
</div>

<hr class="mb-4" />

<div>
    <h2 class="w-auto text-center border border-primary border-3 text-light rounded-4 mb-5 p-3">Preguntas</h2>
    @if (desabilitarAgregarPregunta)
    {
        <div class="bg-danger mb-4 rounded-4">
            <h3 class="text-white text-center" style="margin:15px !important;"><i class="fa-solid fa-warning text-white"></i> Debe ser un cliente registrado para realizar preguntas</h3>
        </div>
        
    }
    <form class="d-flex mb-4" style="height:60px;" id="formPregunta">
        @Html.TextBox("agregarPregunta", "", new { @class = "form-control me-sm-2 text-black bg-white", @placeholder = "Escribir Pregunta", @id = "formPreguntaTexto" })
        <button id="btnPregunta" class="btn btn-info my-2 my-sm-0" type="submit" form="formPregunta" )>Subir</button>
    </form>

    <hr class="mb-4" />
    <button id="btnPreguntas" class="btn btn-info mb-4 w-100" type="button">Mostrar Preguntas</button>
    <div class="mb-4" id="preguntas">

    </div>
</div>

@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")

<script type="text/javascript">

        $(document).ready(function () {

            var desabilitarAgregarPregunta = @Html.Raw(Json.Encode(desabilitarAgregarPregunta));
            console.log(desabilitarAgregarPregunta)

            if (desabilitarAgregarPregunta) {
                $("#formPreguntaTexto").prop("disabled", true);
                $("#btnPregunta").prop("disabled", true);
            }

            $("#formPregunta").validate({
                rules: {
                    agregarPregunta: 'required'
                },
                messages: {
                    agregarPregunta: 'Debes escribir la pregunta'
                },
                submitHandler: function (form) {

                    var IdProducto = @Html.Raw(Json.Encode(Model.IdProducto));
                    var IdUsuario = @Html.Raw(Json.Encode(Model.Usuario.IdUsuario));

                    event.preventDefault();
                    var stringPregunta = $(form).find('[name="agregarPregunta"]').val();

                    $.ajax({
                        method: "POST",
                        url: "/Producto/SavePregunta",
                        data: { stringPregunta, IdProducto, IdUsuario },
                        success: function (response) {
                            $('#btnPreguntas').hide();
                            $("#formPreguntaTexto").val("");
                            $.ajax({
                                method: "GET",
                                url: "/Producto/PreguntasProducto",
                                data: { "IdProducto": IdProducto, "IdUsuarioProducto": IdUsuario },
                                success: function (result) {
                                    $("#preguntas").html("");
                                    $("#preguntas").html(result);
                                },
                                error: function (xhr, status, error) {
                                    console.log("error" + error, "no Error: " + xhr.status)
                                }
                            });
                        },
                        error: function (xhr, status, error) {
                            console.log("error" + error, "no Error: " + xhr.status)
                        }
                    })
                }
            });
        });

            $('#btnPreguntas').click(function () {
                var IdProducto = @Html.Raw(Json.Encode(Model.IdProducto));
                var IdUsuarioProducto = @Html.Raw(Json.Encode(Model.Usuario.IdUsuario));

                $('#btnPreguntas').hide();

                $.ajax({
                    method: "GET",
                    url: "/Producto/PreguntasProducto",
                    data: { "IdProducto": IdProducto, "IdUsuarioProducto": IdUsuarioProducto },
                    success: function (result) {
                        $("#preguntas").html("");
                        $("#preguntas").html(result);
                    },
                    error: function (xhr, status, error) {
                        console.log("error" + error, "no Error: " + xhr.status)
                    }
                });

            });

        $(document).on('click', '.verRespuestas',
            function () {
                var idPregunta = $(this).data('idpregunta');
                var idRespuestaActual = $(this).data('idrespuestaactual');
                var id = "#" + idRespuestaActual;

                $.ajax({
                    method: "GET",
                    url: "/Producto/RespuestasPregunta",
                    data: { "IdPregunta": idPregunta },
                    success: function (result) {
                        $(id).html("");
                        $(id).html(result);
                    },
                    error: function (xhr, status, error) {
                        console.log("error" + error, "no Error: " + xhr.status)
                    }
                })
            });
</script>
}
